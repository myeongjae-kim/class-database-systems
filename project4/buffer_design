일단 fb랑 file descriptor mapping부터.
사이즈 11개짜리 배열 만들자. 0번째는 쓰지 말고, 1번~10번까지가 table_id.
array[table_id]로 접근하면 fd가 나온다. pointer가 돌면서 빈공간에 fd 저장하고
idx를 return해준다. idx는 table_id

bpt_fd_table_map.h
bpt_fd_table_map.c


일단 함수 원형 맟줘주자. 난 init_db 원래 있었다.
아, 원래 내가 갖고있던건 init_table로 바꿔주고, init_db 만들자.
init_db는 buffer manager 초기화 해주는거다.

init_table은 open_table 안에서 불리는거고
init_db는 그냥 프로그램 시작하면 불리고, 프로그램 끝날 때
shutdown_db 불리게 하자. init_db 부를 때 atexit으로 shutdown_db 등록해놔야겠다.

내가 원래 가지고 있던 close_db도 close_table로 바꾸고

제일 먼저 해야할것 bpt_fd_table_map 구현하는거.
그리고 open_db, close_db를 open_table, close_table로 구현하자.
그 다음에 insert, find, delete를 table_id로 관리하게 구현


-----여기까지 완료

여기까지는 준비 과정이고, 마지막으로
init_db, shutdown_db 구현하면서 버퍼매니저 만들면 되겠다.


다만들었다

page_object_constructor 호출한 스코프에서 page_object_destructor도 불러줘라
frame release 때문

----여기까지 완료
해야 할 것: LRU_tail도 dummy로 만들기.
LRU_tail->next는 사실 before를 가리킨다.
ㄴㄴ이렇게 하지 말고 LRU를 doubly linked list로 만들자. dummy head와 dummy tail 갖고 있게 만들고. 함수 만들어서 LRU_head_insert, LRU_tail_insert, LRU_head_remove, LRU_tail_remove 이렇게 4개 function. Counter도 만들자. 에러 체크하기 좋겠다.
LRU_head_find
LRU_tail_find 이것도 만들어라










ㅅㅂ.. 왜 프리페이지 클린이 난리야?

0은 헤더페이지
1은 프리페이지 리스트 헤더 더미
2는 루트


32까지 입력하면

2는 left, 3은 right,  4는 root가 된다.
여기서 3과 4를 지우고 2만 남게됨.


그리고 0,1,4를 무한루프 돈다. 어떻게된거야?

page free 하면 버퍼에서 dirty bit 켜주면 되나. 값 0으로 바꿔주고.
ㄴㄴ dirty bit 켜줄 필요는 없을듯. 싱크 맞춰주면 되니까.

그냥 page free하면 버퍼에서 빼버려라. 없애버려
